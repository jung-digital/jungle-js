{"version":3,"sources":["embers.min.js","/source/embers.js","/source/src/lib/gx/Spark.js","/source/src/lib/Lib.js","/source/src/lib/core/ComponentBase.js","/source/src/embers/embers.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","define","amd","embers","this","Spark","options","id","pathRedraw","sparkLength","sparkResolution","paths","sparking","a","onFrameCallback","velocity","position","points","pos","push","shift","elapsed","context","updateTail","start","end","Lib","DEFAULT_WIDTH","DEFAULT_HEIGHT","ComponentBase","canvas","ctx","getContext","lastTime","canvasTargetWidth","width","canvasTargetHeight","height","window","addEventListener","resizeHandler","bind","onMouseMoveHandler","onMouseOutHandler","onTouchStartHandler","onTouchMoveHandler","setAttribute","event","Math","min","innerWidth","style","state","resize","console","log","timestamp","Embers","_ComponentBase","apply","arguments"],"mappings":"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","file":"embers.min.js","sourcesContent":[null,"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.embers = factory()\n}(this, function () { 'use strict';\n\n  /*============================================\n   * A spark represents a sequence of shapes that\n   * move along a provided path.\n   *============================================*/\n\n  class Spark {\n\n    reset() {\n      this.sparking = false;\n    }\n\n    spark(options) {\n      if (this.sparking) {\n        return;\n      }\n\n      // Merge with current options\n      for (var a in options) {\n        this.options[a] = options[a];\n      }\n\n      // TODO do not duplicate variable names, reference via 'this.options.blah'\n      this.onFrameCallback = options.onFrameCallback;\n      this.velocity = options.velocity;\n\n      this.sparking = true;\n      this.position = this.options.position;\n\n      this.points = this.options.position ? [this.options.position] : undefined; // Reset points for manual mode\n    }\n\n    // Manual mode, set the next position of the spark\n    next(pos) {\n      this.position = pos;\n\n      this.points = this.points || [];\n      this.points.push(pos);\n\n      if (this.points.length > this.sparkResolution) {\n        this.points.shift();\n      }\n    }\n\n    onFrame(elapsed, context) {\n      if (this.sparking) {\n        if (this.onFrameCallback) {\n          this.onFrameCallback.call(this, elapsed, context);\n        }\n\n        this.updateTail(elapsed, context);\n      }\n    }\n\n    updateTail(elapsed, context) {\n      // Go backwards from the end, building up paths and letting the dev manually style them\n      // ensuring that there are this.resolution # of paths.\n      if (this.points.length > 1) {\n        for (var i = 0; i < this.points.length - 1; i++) {\n          var start = this.points[this.points.length - (i + 1)];\n          var end = this.points[this.points.length - (i + 2)];\n\n          // Let dev manually style points based on ratio of start to end\n          this.pathRedraw(this, start, end, i / (this.sparkResolution - 1), elapsed, context);\n        }\n      }\n    }\n\n    // Spark()\n    constructor(options) {\n      this.id = options.id || -1; // index of this spark\n      this.pathRedraw = options.pathRedraw; // A function to call to redraw each segment as the spark moves.\n\n      this.sparkLength = options.sparkLength || 200; // Pixel length of the spark\n      this.sparkResolution = options.sparkResolution || 20; // Resolution (number of segments) of the spark\n\n      this.options = options;\n\n      this.paths = []; // Paper.js Paths of this spark, one for each segment.\n\n      this.sparking = false;\n    }\n  }\n\n  class Lib {\n    constructor() {\n      this.Spark = Spark;\n    }\n  }\n\n  var Lib_js = new Lib();\n\n  const DEFAULT_WIDTH = 800;\n  const DEFAULT_HEIGHT = 800 / 1.618;\n\n  class ComponentBase {\n    constructor(canvas, id) {\n      this.canvas = canvas;\n      this.ctx = canvas.getContext('2d');\n\n      this.lastTime = 0;\n\n      this.canvasTargetWidth = this.width = DEFAULT_WIDTH;\n      this.canvasTargetHeight = this.height = DEFAULT_HEIGHT;\n\n      window.addEventListener('resize', this.resizeHandler.bind(this));\n\n      canvas.addEventListener('mousemove', this.onMouseMoveHandler.bind(this));\n      canvas.addEventListener('mouseout', this.onMouseOutHandler.bind(this));\n      canvas.addEventListener('touchstart', this.onTouchStartHandler.bind(this));\n      canvas.addEventListener('touchmove', this.onTouchMoveHandler.bind(this));\n\n      canvas.setAttribute('width', DEFAULT_WIDTH);\n      canvas.setAttribute('height', DEFAULT_HEIGHT);\n\n      if (id) {\n        canvas.setAttribute('id', id);\n      }\n    }\n\n    resizeHandler(event) {\n      var i = Math.min(800, window.innerWidth);\n\n      canvas.style.width = this.state.canvasTargetWidth = i;\n      canvas.style.height = this.state.canvasTargetHeight = i / 1.618;\n\n      this.resize();\n    }\n\n    resize() {\n      console.log('Resized!', this.state.canvasTargetWidth, this.state.canvasTargetHeight);\n    }\n\n    onMouseMoveHandler() {\n      // noop\n    }\n\n    onMouseOutHandler() {\n      // noop\n    }\n\n    onTouchStartHandler() {\n      // noop\n    }\n\n    onTouchMoveHandler() {\n      // noop\n    }\n\n    onFrameHandler(timestamp) {\n      if (!this.lastTime) {\n        this.lastTime = timestamp;\n        this.elapsed = 0.01;\n      } else {\n        this.elapsed = (timestamp - this.lastTime) / 1000;\n      }\n    }\n  }\n\n  class Embers extends ComponentBase {\n    doSomething() {\n      console.log('something is done');\n    }\n  }\n\n  var embers = Embers;\n\n  return embers;\n\n}));\n","/*============================================\n * A spark represents a sequence of shapes that\n * move along a provided path.\n *============================================*/\n\nclass Spark {\n\n  reset() {\n    this.sparking = false;\n  }\n\n  spark(options) {\n    if (this.sparking) {\n      return;\n    }\n\n    // Merge with current options\n    for (var a in options) {\n      this.options[a] = options[a];\n    }\n\n    // TODO do not duplicate variable names, reference via 'this.options.blah'\n    this.onFrameCallback = options.onFrameCallback;\n    this.velocity = options.velocity;\n\n    this.sparking = true;\n    this.position = this.options.position;\n\n    this.points = this.options.position ? [this.options.position] : undefined; // Reset points for manual mode\n  }\n\n  // Manual mode, set the next position of the spark\n  next(pos) {\n    this.position = pos;\n\n    this.points = this.points || [];\n    this.points.push(pos);\n\n    if (this.points.length > this.sparkResolution) {\n      this.points.shift();\n    }\n  }\n\n  onFrame(elapsed, context) {\n    if (this.sparking) {\n      if (this.onFrameCallback) {\n        this.onFrameCallback.call(this, elapsed, context);\n      }\n\n      this.updateTail(elapsed, context);\n    }\n  }\n\n  updateTail(elapsed, context) {\n    // Go backwards from the end, building up paths and letting the dev manually style them\n    // ensuring that there are this.resolution # of paths.\n    if (this.points.length > 1) {\n      for (var i = 0; i < this.points.length - 1; i++) {\n        var start = this.points[this.points.length - (i + 1)];\n        var end = this.points[this.points.length - (i + 2)];\n\n        // Let dev manually style points based on ratio of start to end\n        this.pathRedraw(this, start, end, i / (this.sparkResolution - 1), elapsed, context);\n      }\n    }\n  }\n\n  // Spark()\n  constructor(options) {\n    this.id = options.id || -1; // index of this spark\n    this.pathRedraw = options.pathRedraw; // A function to call to redraw each segment as the spark moves.\n\n    this.sparkLength = options.sparkLength || 200; // Pixel length of the spark\n    this.sparkResolution = options.sparkResolution || 20; // Resolution (number of segments) of the spark\n\n    this.options = options;\n\n    this.paths = []; // Paper.js Paths of this spark, one for each segment.\n\n    this.sparking = false;\n  }\n}\n\nexport default Spark;\n","import Spark from './gx/Spark.js';\n\nclass Lib {\n  constructor() {\n    this.Spark = Spark;\n  }\n}\n\nexport default new Lib();\n","const DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 800 / 1.618;\n\nclass ComponentBase {\n  constructor(canvas, id) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n\n    this.lastTime = 0;\n\n    this.canvasTargetWidth = this.width = DEFAULT_WIDTH;\n    this.canvasTargetHeight = this.height = DEFAULT_HEIGHT;\n\n    window.addEventListener('resize', this.resizeHandler.bind(this));\n\n    canvas.addEventListener('mousemove', this.onMouseMoveHandler.bind(this));\n    canvas.addEventListener('mouseout', this.onMouseOutHandler.bind(this));\n    canvas.addEventListener('touchstart', this.onTouchStartHandler.bind(this));\n    canvas.addEventListener('touchmove', this.onTouchMoveHandler.bind(this));\n\n    canvas.setAttribute('width', DEFAULT_WIDTH);\n    canvas.setAttribute('height', DEFAULT_HEIGHT);\n\n    if (id) {\n      canvas.setAttribute('id', id);\n    }\n  }\n\n  resizeHandler(event) {\n    var i = Math.min(800, window.innerWidth);\n\n    canvas.style.width = this.state.canvasTargetWidth = i;\n    canvas.style.height = this.state.canvasTargetHeight = i / 1.618;\n\n    this.resize();\n  }\n\n  resize() {\n    console.log('Resized!', this.state.canvasTargetWidth, this.state.canvasTargetHeight);\n  }\n\n  onMouseMoveHandler() {\n    // noop\n  }\n\n  onMouseOutHandler() {\n    // noop\n  }\n\n  onTouchStartHandler() {\n    // noop\n  }\n\n  onTouchMoveHandler() {\n    // noop\n  }\n\n  onFrameHandler(timestamp) {\n    if (!this.lastTime) {\n      this.lastTime = timestamp;\n      this.elapsed = 0.01;\n    } else {\n      this.elapsed = (timestamp - this.lastTime) / 1000;\n    }\n  }\n}\n\nexport default ComponentBase;\n","import Lib from '../lib/Lib.js';\nimport ComponentBase from '../lib/core/ComponentBase.js';\n\nclass Embers extends ComponentBase {\n  doSomething() {\n    console.log('something is done');\n  }\n}\n\nexport default Embers;\n"],"sourceRoot":"/source/"}